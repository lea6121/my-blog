{"version":3,"sources":["contexts.js","utils.js","WebAPI.js","globalStyle.js","components/Header/Header.js","pages/HomePage/HomePage.js","pages/AboutPage/AboutPage.js","pages/PostPage/PostPage.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","pages/ArticlePage/ArticlePage.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPosts","page","fetch","then","res","totalPosts","headers","get","posts","json","getMe","authorization","ResetStyle","createGlobalStyle","GlobalStyle","HeaderContainer","styled","div","Brand","Link","NavbarList","Nav","props","$active","Header","location","useLocation","history","useHistory","useContext","user","setUser","to","pathname","className","onClick","alert","push","Root","PostsContainer","PostTopContainer","PostTitle","PostDate","PostContent","PaginationContainer","Pagination","PageTeller","Post","post","id","title","Date","createdAt","toLocaleString","body","HomePage","useState","setPosts","pages","setPages","currentPage","setCurrentPage","isLoadingMsg","setIsLoadingMsg","useEffect","data","totalPageNum","changePage","e","currentPageNum","Number","target","innerText","RenderPagination","totalPage","Math","ceil","pageBtn","i","map","value","index","Loading","AboutPage","class","PostPage","content","formData","setFormData","errors","setErrors","handleInputChange","name","onSubmit","preventDefault","console","log","method","JSON","stringify","postNewPost","code","message","type","placeholder","onChange","required","htmlFor","LoginPage","username","password","updateFormData","login","ok","response","toString","RegisterPage","nickname","register","ArticlePage","params","useParams","articles","setArticles","App","Provider","exact","path","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"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","file":"static/js/main.5eaac1ea.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const AuthContext = createContext(null)\n","const TOKEN_NAME = 'token'\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token)\n}\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME)\n}\n","import { getAuthToken } from './utils'\n\nconst BASE_URL = 'https://student-json-api.lidemy.me'\n\nexport const getPosts = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=5`\n  ).then((res) => {\n    let totalPosts = res.headers.get('x-total-count')\n    let posts = res.json()\n    return { totalPosts, posts }\n  })\n}\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json())\n}\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then((res) => res.json())\n}\n\nexport const getMe = () => {\n  const token = getAuthToken()\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  }).then((res) => res.json())\n}\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password\n    })\n  }).then((res) => res.json())\n}\n\nexport const postNewPost = (title, body) => {\n  const token = getAuthToken()\n  console.log(token)\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      title,\n      body\n    })\n  }).then((res) => res.json())\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const ResetStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\naddress, caption, cite, code, dfn, em, strong, th, var, b {\n  font-weight: normal;\n  font-style: normal;\n}\nabbr, acronym {\n  border: 0;\n}\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n  display: block;\n}\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\nhtml {\n  text-size-adjust: 100%;\n  box-sizing: border-box;\n}\nbody {\n    line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote {\n  &:before,   &:after {\n    content: '';\n    content: none;\n  }\n}\nq {\n  &:before,   &:after {\n    content: '';\n    content: none;\n  }\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ncaption, th {\n  text-align: left;\n}\ntextarea {\n  resize: none;\n}\na {\n  text-decoration: none;\n  cursor: pointer;\n}\nbutton {\n  padding: 0;\n  border: none;\n  background: none;\n}\n`\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n  font-size: 62.5%; \n  font-family: 'HelveticaNeue', Helvetica, Arial, 'Lucida Grande', sans-serif;\n}\n`\n","import styled from 'styled-components'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport { Link, useLocation, useHistory } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { AuthContext } from '../../contexts'\nimport { setAuthToken } from '../../utils'\n\nconst HeaderContainer = styled.div`\n  letter-spacing: 1px;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  position: fixed;\n  background-color: white;\n  justify-content: space-evenly;\n  z-index: 2;\n  border-bottom: 1px solid black;\n`\n\nconst Brand = styled(Link)`\n  font-size: 50px;\n  text-decoration: none;\n  color: #010101;\n`\n\nconst NavbarList = styled.div`\n  display: flex;\n  color: #010101;\n`\n\nconst Nav = styled(Link)`\n  border-left: 1px solid black;\n  box-sizing: border-box;\n  padding: 35px 40px 35px 40px;\n  font-size: 20px;\n  text-align: center;\n  color: #010101;\n  display: flex;\n  transition: all 0.2s ease-in;\n  cursor: pointer;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(36, 35, 35, 0.9);\n    color: white;\n    `};\n`\n\nexport default function Header() {\n  const location = useLocation()\n  const history = useHistory()\n  const { user, setUser } = useContext(AuthContext)\n  const handleLogout = () => {\n    setAuthToken('')\n    setUser(null)\n    alert('登出成功！')\n    if (location.pathname !== '/') {\n      history.push('/')\n    }\n  }\n\n  return (\n    <HeaderContainer>\n      <ResetStyle />\n      <GlobalStyle />\n      <Brand to=\"/\" $active={location.pathname === '/'}>\n        BLOG\n      </Brand>\n      <NavbarList className=\"tags\">\n        <Nav to=\"/about\" $active={location.pathname === '/about'}>\n          ABOUT\n        </Nav>\n        {user && (\n          <Nav to=\"/new-post\" $active={location.pathname === '/new-post'}>\n            POST\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === '/login'}>\n            LOG IN\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>LOG OUT</Nav>}\n        {!user && (\n          <Nav to=\"/register\" $active={location.pathname === '/register'}>\n            SIGN UP\n          </Nav>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport { Link, useLocation } from 'react-router-dom'\nimport { getPosts } from '../../WebAPI'\nimport { Loading } from '../../components/App/App'\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  padding-top: 100px;\n  position: relative;\n`\n\nconst PostsContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 40px 10px;\n  border: 1px solid black;\n  margin: 20px;\n`\n\nconst PostTopContainer = styled.div`\n  padding-bottom: 30px;\n  margin: 0px 18px 15px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst PostTitle = styled(Link)`\n  font-weight: 600;\n  line-height: 4rem;\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`\n\nconst PostDate = styled.div`\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.8);\n`\n\nconst PostContent = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  margin: 0 18px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  white-space: pre-line;\n  font-size: 19px;\n  line-height: 4rem;\n`\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n`\n\nconst Pagination = styled(Link)`\n  font-weight: 500;\n  color: rgba(0, 0, 0, 0.7);\n  text-decoration: none;\n  margin: 10px 5px;\n  font-size: 28px;\n  padding: 10px 18px;\n`\nconst PageTeller = styled.div`\n  font-size: 16px;\n  color: grey;\n  text-align: center;\n  padding: 0 0 50px;\n`\nfunction Post({ post }) {\n  const location = useLocation()\n\n  return (\n    <PostsContainer>\n      <PostTopContainer>\n        <PostTitle\n          to={`/posts/${post.id}`}\n          $active={location.pathname === '/article'}\n        >\n          {post.title}\n        </PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      </PostTopContainer>\n      <PostContent>{post.body}</PostContent>\n    </PostsContainer>\n  )\n}\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([])\n  const [pages, setPages] = useState(0)\n  const [currentPage, setCurrentPage] = useState(0)\n  const [isLoadingMsg, setIsLoadingMsg] = useState(false)\n\n  useEffect(() => {\n    if (isLoadingMsg) {\n      return\n    }\n    setIsLoadingMsg(true)\n    getPosts()\n      .then((data) => {\n        setIsLoadingMsg(false)\n        setPages(data.totalPosts)\n        setCurrentPage(1)\n        return data.posts\n      })\n      .then((posts) => {\n        setPosts(posts)\n      })\n  }, [])\n\n  const totalPageNum = pages\n\n  function changePage(e) {\n    const currentPageNum = Number(e.target.innerText)\n    setCurrentPage(currentPageNum)\n\n    getPosts(currentPageNum)\n      .then((data) => {\n        setPages(data.totalPosts)\n        return data.posts\n      })\n      .then((posts) => {\n        setPosts(posts)\n      })\n  }\n\n  function RenderPagination() {\n    const totalPage = Math.ceil(totalPageNum / 5)\n    let pageBtn = []\n    for (let i = 1; i <= totalPage; i++) {\n      pageBtn.push(i)\n    }\n    return (\n      <div>\n        <PaginationContainer>\n          {pageBtn.map((value, index) => (\n            <Pagination key={value} onClick={changePage}>\n              {value}\n            </Pagination>\n          ))}\n        </PaginationContainer>\n        <PageTeller>\n          第 {currentPage} 頁 / 共 {totalPage} 頁\n        </PageTeller>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <ResetStyle />\n      <GlobalStyle />\n      {isLoadingMsg && <Loading>Loading...</Loading>}\n      <Root>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} />\n        ))}\n        <RenderPagination></RenderPagination>\n      </Root>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport './about.css'\n\nexport default function AboutPage() {\n  return (\n    <div>\n      <ResetStyle />\n      <GlobalStyle />\n      <div className=\"about-container\">\n        <div class=\"profile\">\n          <div class=\"profile_info\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut ipsum\n            velit, pharetra sit amet hendrerit quis, ultricies non purus. Ut\n            consequat varius eros, sit amet posuere erat sodales eu. Phasellus\n            leo nisl, consectetur vel efficitur a, convallis sed lectus. Nunc\n            rutrum, est nec malesuada dictum, tellus lorem tincidunt ligula, at\n            consectetur felis purus non eros. Vivamus tempor nisi lacus, sed\n            commodo tellus ultricies vel. Class aptent taciti sociosqu ad litora\n            torquent per conubia nostra, per inceptos himenaeos. Proin\n            sollicitudin, metus in tempus condimentum, lorem sapien interdum\n            dolor, ut posuere dolor lectus at diam. Suspendisse fermentum turpis\n            quis aliquam dignissim. Morbi eu hendrerit erat, vitae imperdiet\n            nisl. Praesent a aliquet urna, a ultrices sem. Sed in consectetur\n            augue.\n          </div>\n          <div class=\"profile_pic\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport './post.css'\nimport { postNewPost } from '../../WebAPI'\nimport { Loading } from '../../components/App/App'\n\nexport default function PostPage() {\n  const [formData, setFormData] = useState({\n    title: '',\n    content: ''\n  })\n  const { title, content } = formData\n  const [errors, setErrors] = useState('')\n  const [isLoadingMsg, setIsLoadingMsg] = useState(false)\n  const history = useHistory()\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault()\n    if (isLoadingMsg) {\n      return\n    }\n    setIsLoadingMsg(true)\n    postNewPost(title, content).then((data) => {\n      setIsLoadingMsg(false)\n      if (data.code) {\n        return setErrors(data.message)\n      }\n      if (data.title) {\n        alert('發佈文章成功！')\n        history.push('/')\n      }\n    })\n  }\n\n  return (\n    <div className=\"post-wrapper\">\n      {isLoadingMsg && <Loading>Loading...</Loading>}\n      <ResetStyle />\n      <GlobalStyle />\n      <div className=\"post-container\">\n        <form className=\"post-form\" onSubmit={handleFormSubmit}>\n          <div className=\"post-form__editor\">\n            <div className=\"post-form__title input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter the title here...\"\n                name=\"title\"\n                value={title}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"post-form__content form-floating\">\n              <textarea\n                className=\"form-control\"\n                placeholder=\"Leave a comment...\"\n                name=\"content\"\n                value={content}\n                onChange={handleInputChange}\n                required\n              ></textarea>\n              <label htmlFor=\"floatingTextarea2\">Leave a comment here...</label>\n            </div>\n            <div className=\"post-form__error\">{errors}</div>\n          </div>\n\n          <div className=\"post-form__submit\">\n            <input type=\"submit\" value=\"SUBMIT\" class=\"post-form__submit-btn\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport { Loading } from '../../components/App/App'\nimport './login.css'\nimport { getMe, login } from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\nimport { useHistory } from 'react-router'\nimport { AuthContext } from '../../contexts'\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext)\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  })\n  const { username, password } = formData\n  const updateFormData = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n  const [errors, setErrors] = useState('')\n  const [isLoadingMsg, setIsLoadingMsg] = useState(false)\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (isLoadingMsg) {\n      return\n    }\n    setIsLoadingMsg(true)\n    login(username, password).then((data) => {\n      setIsLoadingMsg(false)\n      if (data.ok === 0) {\n        return setErrors(data.message)\n      }\n      setAuthToken(data.token)\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null)\n          return setErrors(response.toString())\n        }\n        alert('登入成功！')\n        setUser(response.data)\n        history.push('/')\n      })\n    })\n  }\n\n  return (\n    <div className=\"login-wrapper\">\n      <ResetStyle />\n      <GlobalStyle />\n      {isLoadingMsg && <Loading>Loading...</Loading>}\n      <div className=\"login-container\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"login-form\">\n            USERNAME\n            <br />\n            <input\n              className=\"login-input\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => updateFormData(e)}\n              required\n            />\n            <br />\n          </div>\n          <div className=\"login-form\">\n            PASSWORD\n            <br />\n            <input\n              className=\"login-input\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => updateFormData(e)}\n              required\n            />\n            <br />\n            <span>{errors}</span>\n          </div>\n          <div>\n            <input className=\"login-submit\" type=\"submit\" value=\"SIGN IN\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport { useHistory } from 'react-router'\nimport { Loading } from '../../components/App/App'\nimport './register.css'\nimport { register, getMe } from '../../WebAPI'\nimport { AuthContext } from '../../contexts'\nimport { setAuthToken } from '../../utils'\n\nexport default function RegisterPage() {\n  const { setUser } = useContext(AuthContext)\n  const [formData, setFormData] = useState({\n    nickname: '',\n    username: '',\n    password: ''\n  })\n  const { nickname, username, password } = formData\n  const updateFormData = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    })\n  }\n  const [errors, setErrors] = useState('')\n  const [isLoadingMsg, setIsLoadingMsg] = useState(false)\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (isLoadingMsg) {\n      return\n    }\n    setIsLoadingMsg(true)\n    register(nickname, username, password).then((data) => {\n      setIsLoadingMsg(false)\n      if (data.code) {\n        return setErrors(data.message)\n      }\n      if (data.ok === 1) {\n        setAuthToken(data.token)\n      }\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null)\n          return setErrors(response.toString())\n        }\n        alert('註冊成功！')\n        setUser(response.data)\n        history.push('/')\n      })\n    })\n  }\n\n  return (\n    <div className=\"register-wrapper\">\n      <ResetStyle />\n      <GlobalStyle />\n      {isLoadingMsg && <Loading>Loading...</Loading>}\n      <div className=\"register-container\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"register-form\">\n            NICKNAME\n            <br />\n            <input\n              className=\"register-input\"\n              type=\"text\"\n              name=\"nickname\"\n              placeholder=\"您的暱稱\"\n              value={nickname}\n              onChange={(e) => updateFormData(e)}\n              required\n            />\n            <br />\n          </div>\n          <div className=\"register-form\">\n            USERNAME\n            <br />\n            <input\n              className=\"register-input\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"您的使用者名稱\"\n              value={username}\n              onChange={(e) => updateFormData(e)}\n              required\n            />\n            <br />\n          </div>\n          <div className=\"register-form\">\n            PASSWORD\n            <br />\n            <input\n              className=\"register-input\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"您的密碼\"\n              value={password}\n              onChange={(e) => updateFormData(e)}\n              required\n            />\n            <br />\n            <span>{errors}</span>\n          </div>\n          <div>\n            <input className=\"register-submit\" type=\"submit\" value=\"SUBMIT\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport { ResetStyle, GlobalStyle } from '../../globalStyle'\nimport './article.css'\nimport { getPost } from '../../WebAPI'\nimport { useParams } from 'react-router-dom'\nimport { Loading } from '../../components/App/App'\n\nexport default function ArticlePage() {\n  const params = useParams()\n  const [articles, setArticles] = useState([])\n  const [isLoadingMsg, setIsLoadingMsg] = useState(false)\n  const history = useHistory()\n\n  useEffect(() => {\n    if (isLoadingMsg) {\n      return\n    }\n    setIsLoadingMsg(true)\n    getPost(params.id).then((articles) => {\n      setIsLoadingMsg(false)\n      setArticles(articles)\n    })\n  }, [])\n\n  const handleClick = () => {\n    history.push('/')\n  }\n\n  return (\n    <div>\n      <ResetStyle />\n      <GlobalStyle />\n      <div>\n        <div className=\"article\">\n        {isLoadingMsg && <Loading>Loading...</Loading>}\n          <h1>{articles.title}</h1>\n          <p>{new Date(articles.createdAt).toLocaleString()}</p>\n          <div className=\"article__content\">{articles.body}</div>\n          <button\n            type=\"button\"\n            className=\"article__content-btn btn btn-dark\"\n            onClick={handleClick}\n          >\n            回文章列表\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport { AuthContext } from '../../contexts'\nimport { getMe } from '../../WebAPI'\nimport { getAuthToken } from '../../utils'\nimport styled from 'styled-components'\nimport Header from '../Header'\nimport HomePage from '../../pages/HomePage'\nimport AboutPage from '../../pages/AboutPage'\nimport PostPage from '../../pages/PostPage'\nimport LoginPage from '../../pages/LoginPage'\nimport RegisterPage from '../../pages/RegisterPage'\nimport ArticlePage from '../../pages/ArticlePage'\n\nconst Root = styled.div`\n  letter-spacing: 1px;\n  max-width: 100vw;\n  font-family: Baskerville, Georgia, 'Times New Roman', Times, serif;\n`\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.7);\n  font-weight: 600;\n  color: white;\n  font-size: 72px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  z-index: 1;\n`\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    // 有 token 才 call api\n    if (getAuthToken()) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data)\n        }\n      })\n    }\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route path=\"/new-post\">\n              <PostPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <ArticlePage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  )\n}\n\nexport { Loading }\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  colors: {\n    primary_300: '#3333dd',\n    primary_400: '#e33e3e',\n    primary_500: '#af0505'\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}